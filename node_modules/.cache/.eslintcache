[{"/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/index.js":"1","/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/App.js":"2","/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/reportWebVitals.js":"3","/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/LoginPage.js":"4","/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/Dashboard.js":"5","/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/TenantProfile.js":"6","/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/Forum.js":"7","/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/Events.js":"8","/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/ApartmentNews.js":"9","/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/LocalBusiness.js":"10","/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/Surveys.js":"11","/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/ForumPosts.js":"12","/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/MaintenanceRequest.js":"13"},{"size":623,"mtime":1671152725277,"results":"14","hashOfConfig":"15"},{"size":2002,"mtime":1671377945453,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1671135537560,"results":"17","hashOfConfig":"15"},{"size":4831,"mtime":1671218903398,"results":"18","hashOfConfig":"15"},{"size":1619,"mtime":1671377871063,"results":"19","hashOfConfig":"15"},{"size":134,"mtime":1671210258381,"results":"20","hashOfConfig":"15"},{"size":330,"mtime":1671223887371,"results":"21","hashOfConfig":"15"},{"size":116,"mtime":1671210258380,"results":"22","hashOfConfig":"15"},{"size":137,"mtime":1671210258380,"results":"23","hashOfConfig":"15"},{"size":137,"mtime":1671210258381,"results":"24","hashOfConfig":"15"},{"size":119,"mtime":1671210258381,"results":"25","hashOfConfig":"15"},{"size":514,"mtime":1671223887371,"results":"26","hashOfConfig":"15"},{"size":1769,"mtime":1671379449086,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11xcv9l",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/index.js",[],[],"/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/App.js",["70","71"],[],"/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/reportWebVitals.js",[],[],[],"/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/LoginPage.js",["72"],[],"import React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\n\nfunction LoginPage(props) {\nconst {updateTenant, setErrors} = props\n\n// sign-in\nconst [email, setEmail] = useState(\"\")\nconst [password, setPassword] = useState(\"\")\nconst [createNewAccount, setCreateNewAccount] = useState(false)\nconst history = useHistory()\n\nfunction handleEmailChange(e){\nsetEmail(e.target.value)\n}\nfunction handlePasswordChange(e){\nsetPassword(e.target.value)\n}\n\n\nfunction handleSubmit(e){\n    e.preventDefault()\n    const tenant = {\n    email_address: email,\n    password: password\n}\n// debugger\nconsole.log(tenant)\n    setEmail(\"\")\n    setPassword(\"\")\n\n        fetch(\"http://localhost:3000/login\", {\n            method:'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n        },\n            body:JSON.stringify(tenant)\n        })\n        .then (res => {\n            if(res.ok){\n                res.json().then(tenant => {\n                    updateTenant(tenant)\n                    history.push('/dashboard')\n                })\n            } else {\n                res.json().then(json => setErrors(json.errors))\n            }\n        })\n}\n\n\n// CREATE NEW ACCOUNT\nconst [firstName, setFirstName] = useState(\"\")\nconst [lastName, setLastName] = useState(\"\")\nconst [phoneNumber, setPhoneNumber] = useState(\"\")\nconst [newEmailAddress, setNewEmailAddress] = useState(\"\")\nconst [newPassword, setNewPassword] = useState(\"\")\n\n\nfunction handleFirstNameChange(e){\n    setFirstName(e.target.value)\n    }\n\nfunction handleLastNameChange(e){\n    setLastName(e.target.value)\n    }\n\nfunction handlePhoneNumberChange(e){\n    setPhoneNumber(e.target.value)\n    }\n\nfunction handleNewEmailChange(e){\n    setNewEmailAddress(e.target.value)\n    }\n\nfunction handleNewPasswordChange(e){\n    setNewPassword(e.target.value)\n    }\n\nconst handleCreateAccount = e => {\n    e.preventDefault()\n    const newTenant = {\n        first_name: firstName,\n        last_name: lastName,\n        phone_number: phoneNumber,\n        email_address: newEmailAddress,\n        password: newPassword\n    }\n    console.log(newTenant)\n\n    fetch(\"http://localhost:3000/tenants\", {\n        method:'POST',\n        headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n        },\n        body:JSON.stringify(newTenant)\n    })\n    .then( res => {\n        if(res.ok){\n            res.json().then(newTenant => console.log(newTenant))\n            toggleForm()\n        } else {\n            res.json().then(json => setErrors(json.errors))\n        }\n    })\n}\n\n    // Switches between create account form and login form \nconst toggleForm = () => {\n    setCreateNewAccount(!createNewAccount)\n}\n\n\n    return (\n        <div>\n            <h1>Welcome To ApartmentConnect</h1>\n\n            {createNewAccount ? \n            // CREATE NEW ACCOUNT\n            <form onSubmit={handleCreateAccount} className='login-form'>\n            <label>First Name:</label>\n            <input\n            type='text'\n            value={firstName}\n            onChange={handleFirstNameChange}\n            />\n            <label>Last Name:</label>\n            <input\n            type='text'\n            value={lastName}\n            onChange={handleLastNameChange}\n            />\n            <label>Phone Number:</label>\n            <input\n            type='text'\n            value={phoneNumber}\n            onChange={handlePhoneNumberChange}\n            />\n            <label>Email Address:</label>\n            <input\n            type='text'\n            value={newEmailAddress}\n            onChange={handleNewEmailChange}\n            />\n            <label>Password:</label>\n            <input\n            type='text'\n            value={newPassword}\n            onChange={handleNewPasswordChange}\n            />\n            <input  type=\"submit\" value=\"Submit\"/>\n            </form>\n\n            :\n            \n            // LOGIN FORM\n            <form className='login-form' onSubmit={handleSubmit}>\n            <label>Email:</label>\n                <input \n                type=\"text\" \n                name=\"Email\"\n                value={email}\n                onChange={handleEmailChange}\n                />\n\n                <label>Password:</label>\n                <input \n                type=\"password\" \n                name=\"password\"\n                value={password}\n                onChange={handlePasswordChange}\n                />\n                <br></br>\n                <br></br>\n                <input type=\"submit\" value=\"Login\"/>\n                <br></br>\n                <br></br>\n                <a onClick={toggleForm}>Don't have an account? Click here to register!</a>\n            </form>\n            \n            \n            }\n        </div>\n    )\n}\n\nexport default LoginPage",[],"/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/Dashboard.js",[],[],"/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/TenantProfile.js",[],[],"/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/Forum.js",[],[],"/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/Events.js",[],[],"/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/ApartmentNews.js",[],[],"/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/LocalBusiness.js",[],[],"/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/Surveys.js",[],[],"/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/ForumPosts.js",[],[],"/Users/joerobbins/Development/code/phase-5/ApartmentConnect/ApartmentConnect-FrontEnd/src/components/MaintenanceRequest.js",["73"],[],{"ruleId":"74","severity":1,"message":"75","line":2,"column":25,"nodeType":"76","messageId":"77","endLine":2,"endColumn":29},{"ruleId":"74","severity":1,"message":"78","line":18,"column":10,"nodeType":"76","messageId":"77","endLine":18,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":180,"column":17,"nodeType":"81","endLine":180,"endColumn":41},{"ruleId":"74","severity":1,"message":"82","line":5,"column":12,"nodeType":"76","messageId":"77","endLine":5,"endColumn":25},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'errors' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'currentTenant' is assigned a value but never used."]